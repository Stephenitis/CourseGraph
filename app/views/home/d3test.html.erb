<%= javascript_tag do %>
var courseTree = <%= raw(@tree.to_json) %>
<% end %>

<div id="container">

    <div id="viz"></div>

    <script type="text/javascript">

      //JSON object with the data
      var treeData = courseTree;

      // Create a svg canvas
      var vis = d3.select("#viz").append("svg:svg")
      .attr("width", 1000)
      .attr("height", 1000)
      .append("svg:g")
      .attr("transform", "translate(0, 50)"); // shift everything to the right

      // Create a tree "canvas"
      var tree = d3.layout.tree()
      .separation(function(a, b) { return a.parent === b.parent ? 0 : 20; })
      .size([900,900]);



      var diagonal = d3.svg.diagonal()
      // change x and y (for the left to right tree)
      .projection(function(d) { return [d.x, d.y]; });

      // Preparing the data for the tree layout, convert data into an array of nodes
      var nodes = tree.nodes(treeData);
      // Create an array with all the links
      var links = tree.links(nodes);

      console.log(treeData)
      console.log(nodes)
      console.log(links)

      var link = vis.selectAll("pathlink")
      .data(links)
      .enter().append("svg:path")
      .attr("class", "link")
      .attr("d", diagonal)

      var node = vis.selectAll("g.node")
      .data(nodes)
      .enter().append("svg:g")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })

      // Add the dot at every node
      node.append("svg:circle")
      .attr("r", 3.5);

      // place the name atribute left or right depending if children
      node.append("svg:text")
      .attr("dx", function(d) { return d.children ? -15 : 15; })
      .attr("dy", 3)
      .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
      .text(function(d) { return d.name; })

    </script>
</div>
